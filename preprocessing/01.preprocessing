{"cells":[{"cell_type":"markdown","source":["Input:\n","\n","\n","*   'data/'+ folder_name+ '/preop.csv'\n","*   \"data/\"+folder_name+ \"/patient_wrongbed.csv\"\n","*   \"data/\"+folder_name+ \"/patient_icd.csv\"\n","*   \"data/other/SES_PC4_2021_2022_Incl_ExclStudentenV4.xlsx\"\n","\n","\n","Output:\n","\n","\n","*   'data/preprocessed/patient.csv'\n","\n"],"metadata":{"id":"fNJejUbWIrBD"}},{"cell_type":"markdown","metadata":{"id":"ekRM5_LS--4c"},"source":["This file does the following:\n","Notebook to preprocess the data as it comes out of the SQL queries."]},{"cell_type":"markdown","source":["# 0. Connecting drive and fixing imports"],"metadata":{"id":"Ab_xmNsE982e"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1702,"status":"ok","timestamp":1736428950269,"user":{"displayName":"Nathan de Pater","userId":"00637828017025432291"},"user_tz":-60},"id":"T62IS1kz_F8l","outputId":"a2e207f1-19cd-41ce-8d19-621c01284779"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["try:\n","  import google.colab\n","  from google.colab import drive\n","  drive.mount('/content/drive')\n","  base_dir = '/content/drive/MyDrive/thesis/'\n","  folder_name = 'SQL_extracts_hashed'\n","except:\n","  IN_COLAB = False"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"An6HZeS0_5YB"},"outputs":[],"source":["create_new_datasets = True\n","\n","import sys\n","!{sys.executable} -m pip install optuna -q\n","!{sys.executable} -m pip install pyxlsb -q"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fHjnpAE9_KEA"},"outputs":[],"source":["import pandas as pd\n","import torch\n","import numpy as np\n","import torch.nn as nn\n","import torch.optim as optim\n","import optuna\n","from datetime import datetime\n","from sklearn.metrics import accuracy_score\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import LabelEncoder\n","from torch.utils.data import DataLoader, Dataset\n","# explicitly requires this experimental feature\n","from sklearn.experimental import enable_iterative_imputer  # noqa\n","# now you can import normally from sklearn.impute\n","from sklearn.impute import IterativeImputer"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"i1Ki1iLl_Sc4"},"outputs":[],"source":["preop_path = base_dir + 'data/'+ folder_name+ '/preop.csv'\n","df_preop = pd.read_csv(preop_path, delimiter=\";\")"]},{"cell_type":"markdown","source":["# 1. Exploring and cleaning Preop"],"metadata":{"id":"doVZDlhF-jRm"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-wAdnSSUP1VK","executionInfo":{"status":"ok","timestamp":1736428960900,"user_tz":-60,"elapsed":590,"user":{"displayName":"Nathan de Pater","userId":"00637828017025432291"}},"outputId":"3b03d349-7b58-40da-fea9-db63ec8a3737"},"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['PatientID', 'FormID', 'Question AnswerID', 'Date Question',\n","       'ScreenData', 'OpnameNr', 'QuestionID', 'Discription Question',\n","       'Antwoord', 'Physician department Name'],\n","      dtype='object')\n","There are 530082 entries in the Preoperative dataset\n","There are 52509 unique patients in the Preoperative dataset\n","There are 81722 unique patient_screen combinations\n","There are 67036 unique patient_opname combinations\n"]}],"source":["## First we check all columns of the dataset\n","print(df_preop.columns)\n","n_entries =             len(df_preop)\n","unique_patients =       len(df_preop['PatientID'].unique())\n","unique_patient_screen = len(df_preop.drop_duplicates(subset=['PatientID', 'ScreenData']))\n","unique_patient_opname = len(df_preop.drop_duplicates(subset=['PatientID', 'OpnameNr']))\n","\n","print(f\"There are {n_entries} entries in the Preoperative dataset\")\n","print(f\"There are {unique_patients      } unique patients in the Preoperative dataset\")\n","print(f\"There are {unique_patient_screen} unique patient_screen combinations\")\n","print(f\"There are {unique_patient_opname} unique patient_opname combinations\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-h28T9H1PxcQ","executionInfo":{"status":"ok","timestamp":1736428962684,"user_tz":-60,"elapsed":1787,"user":{"displayName":"Nathan de Pater","userId":"00637828017025432291"}},"outputId":"92d08793-e80e-464a-e55a-121aa99a1974"},"outputs":[{"output_type":"stream","name":"stdout","text":["PatientID                         0\n","FormID                            0\n","Question AnswerID                 0\n","Date Question                     0\n","ScreenData                        0\n","OpnameNr                     350161\n","QuestionID                        0\n","Discription Question              0\n","Antwoord                        129\n","Physician department Name         0\n","dtype: int64\n","There are 52508 patients\n","There are 81720 combinations of patient and screendata\n"]}],"source":["## There are still some empty cells in the dataframe. We start by deleting all fully empty rows.\n","## Repeat this same analysis with new data, do not blindly run these cells!\n","print(df_preop.isnull().sum())\n","\n","# First drop all empty rows from the dataframe\n","df_preop.dropna(how = 'all', inplace = True)\n","\n","### Upon inspection, the ones without a date contain no information, so it is safe to drop them\n","df_preop.dropna(subset = [\"Date Question\"], inplace = True)\n","\n","## Further inspection of the entries without a Question ID reveals that they also contain no information. Only some random numbers in the open question, which are irrelevant (Checked with Esther)\n","df_preop.dropna(subset = [\"QuestionID\"], inplace = True)\n","\n","## Further inspection of the entries without an Antwoord reveal that they also contain no information.\n","df_preop.dropna(subset = [\"Antwoord\"], inplace = True)\n","\n","## Finally we see that the discriptionAnswer 2 sometimes gives more information, so we keep it.\n","## The only other column that contains empty values is the Physician department Name. This is only the case for questions which are answered with an image, which is irrelevant for our analysis.\n","df_preop.dropna(subset = [\"Physician department Name\"], inplace = True)\n","\n","# Importantly, there are 281648 observations of OpnameNr without an observation. With the date and the patientnumber we might still use these.\n","print(f\"There are {len(df_preop['PatientID'].unique())} patients\")\n","print(f\"There are {len(df_preop[['PatientID', 'ScreenData']].drop_duplicates())} combinations of patient and screendata\")\n","\n","# An assumption is made here that the questions without 'Opnamenummer' are still relevant for the analysis."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gyT7SzPc_kBc","executionInfo":{"status":"ok","timestamp":1736428965673,"user_tz":-60,"elapsed":2992,"user":{"displayName":"Nathan de Pater","userId":"00637828017025432291"}},"outputId":"30a6eb06-f2e1-4ec7-b91c-17d2ac54ba90"},"outputs":[{"output_type":"stream","name":"stdout","text":["The frequency of different amount of dates on which questions where asked, or screenings were done looks as follows:\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[<Axes: title={'center': 'ScreenData'}>]], dtype=object)"]},"metadata":{},"execution_count":29},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["## I will convert the dates to datetime for easier comparisons\n","df_preop[\"Date Question\"] = pd.to_datetime(df_preop[\"Date Question\"], format=\"%Y-%m-%d %H:%M:%S.%f\")\n","df_preop[\"ScreenData\"]    = pd.to_datetime(df_preop[\"ScreenData\"], format=\"%Y-%m-%d %H:%M:%S.%f\")\n","\n","print(\"The frequency of different amount of dates on which questions where asked, or screenings were done looks as follows:\")\n","df_preop.groupby('PatientID')[[\"Date Question\"]].nunique().hist(bins=100)\n","df_preop.groupby('PatientID')[[\"ScreenData\"]].nunique().hist(bins=100)\n","## We see that there are roughly at most 4 moments of screening per patient, whereas there are typically up to 10 dates where questions were asked.\n","# This tells be that there is typically one ScreenDate associated to one 'opname'"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Zl35yEb0QI_F","executionInfo":{"status":"ok","timestamp":1736428965673,"user_tz":-60,"elapsed":8,"user":{"displayName":"Nathan de Pater","userId":"00637828017025432291"}},"outputId":"e33731fc-5986-4136-8631-90e16b64dfe1"},"outputs":[{"output_type":"stream","name":"stdout","text":["Time between first screening 2015-07-07 00:00:00 and last screening 2015-07-07 00:00:00 is 0 days 00:00:00\n"]}],"source":["# Next I will inspect these dates for a single (random) patient, to get a better understanding\n","random_patient = \"0xC9DE58C8B44CDB410C4D32506116E8FA4760D2BF5F229CA034D10D4B827AA9F0\"\n","data_patient = df_preop[df_preop[\"PatientID\"] == random_patient][\"ScreenData\"]\n","min_data, max_data = data_patient.min(), data_patient.max()\n","\n","print(f\"Time between first screening {(min_data)} and last screening {(max_data)} is {(max_data-min_data)}\")"]},{"cell_type":"markdown","source":["# 2. Extracting the 3 main variables for the Pre-operative **dataset**"],"metadata":{"id":"Pd6o_rWC_4wX"}},{"cell_type":"markdown","metadata":{"id":"hVuoiyexkMgY"},"source":["In this section the 3 main variables will be extracted and cleaned out of the Pre-operative dataset.\n","1. Dyspnoe_score\n","2. ASA_score\n","3. BMI"]},{"cell_type":"markdown","source":["1. Dyspnoe"],"metadata":{"id":"hBvo49PKAKgU"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"id":"2oo5FhUhSLMK","executionInfo":{"status":"ok","timestamp":1736428967998,"user_tz":-60,"elapsed":2332,"user":{"displayName":"Nathan de Pater","userId":"00637828017025432291"}},"outputId":"fc0b3e1a-03f4-4fbf-e788-017b0f81a95f"},"outputs":[{"output_type":"stream","name":"stdout","text":["There are a total of 41371 observations for dyspnoe scores\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-31-b697893a2f2e>:14: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_dysp.loc[df_dysp['QuestionID'] == \"CS00059513\", 'Dyspnoe'] = df_dysp['Antwoord']\n"]},{"output_type":"stream","name":"stdout","text":["there are 0 missing values in the dyspnoe column\n","these are the value counts Dyspnoe\n","0           25046\n","1            8995\n","2            3782\n","3            2022\n","4            1038\n","0             214\n","5             196\n","ja             77\n","onbekend        1\n","Name: count, dtype: int64\n","these are the unique values of dyspnoe ['4' '0' '2' '1' '3' 0 'ja' '5' 'onbekend']\n","Dyspnoe\n","0    25260\n","1     8995\n","2     3782\n","3     2022\n","4     1038\n","5      196\n","Name: count, dtype: int64\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-31-b697893a2f2e>:29: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_dysp['Dyspnoe'] = df_dysp['Dyspnoe'].apply(lambda x: int(x))\n"]},{"output_type":"stream","name":"stdout","text":["Index(['PatientID', 'ScreenData', 'FormID', 'Question AnswerID',\n","       'Date Question', 'OpnameNr', 'QuestionID', 'Discription Question',\n","       'Antwoord', 'Physician department Name', 'Dyspnoe'],\n","      dtype='object')\n","83571\n","There are now 83571 unique combinations of [PatientID, ScreenData] of which 41293 with a dyspnoe score (and 42278 missing)\n"]}],"source":["# There are four questions linked specifically to Dyspnoe:\n","# - CS00059513, has score in Antwoord\n","# - CS00127543, has score in Antwoord, sometimes as \"nee\"\n","# - CS00023990, is about Dyspnoe d'effort which is related but not relevant (Verified by Esther)\n","# - LA00015770, has score in Antwoord\n","\n","dyspQID = [\"CS00059513\", \"CS00127543\", \"LA00015770\"]\n","\n","# Together these two questions give us 41079 observations of dyspnoe scores\n","df_dysp = df_preop[df_preop[\"QuestionID\"].isin(dyspQID)]\n","print(f\"There are a total of {len(df_dysp)} observations for dyspnoe scores\")\n","\n","# add the dyspnoe score to the dataframe\n","df_dysp.loc[df_dysp['QuestionID'] == \"CS00059513\", 'Dyspnoe'] = df_dysp['Antwoord']\n","df_dysp.loc[df_dysp['QuestionID'] == \"CS00127543\", 'Dyspnoe'] = df_dysp['Antwoord']\n","df_dysp.loc[df_dysp['QuestionID'] == \"LA00015770\", 'Dyspnoe'] = df_dysp['Antwoord']\n","\n","# Assumption that nee = 0\n","df_dysp.loc[df_dysp['Dyspnoe'] == \"nee\", 'Dyspnoe'] = 0\n","\n","# use the below lines to check whether there are no strange or missing values left in dyspnoe.\n","print(f\"there are {df_dysp['Dyspnoe'].isna().sum()} missing values in the dyspnoe column\")\n","print(f\"these are the value counts {(df_dysp['Dyspnoe'].value_counts())}\")\n","print(f\"these are the unique values of dyspnoe {df_dysp['Dyspnoe'].unique()}\")\n","\n","# drop ja and onbekend\n","df_dysp = df_dysp[df_dysp['Dyspnoe'] != 'ja']\n","df_dysp = df_dysp[df_dysp['Dyspnoe'] != 'onbekend']\n","df_dysp['Dyspnoe'] = df_dysp['Dyspnoe'].apply(lambda x: int(x))\n","print(df_dysp['Dyspnoe'].value_counts())\n","\n","# We want a resulting dataframe which include every combination of ID and ScreenData, but without duplicates.\n","df_result = df_preop[['PatientID', 'ScreenData']].copy().drop_duplicates()\n","\n","# Merge the two dataframes on Hashed Patient ID and ScreenData\n","df_result_dysp = pd.merge(df_result, df_dysp, how='left', on =['PatientID', 'ScreenData'])\n","print(df_result_dysp.columns)\n","# print(df_result_dysp.head())\n","print(len(df_result_dysp))\n","\n","columns_to_keep = ['PatientID', 'ScreenData', 'Dyspnoe', 'Date Question', 'Physician department Name']\n","df_result_dysp  = df_result_dysp[columns_to_keep]\n","\n","print(f\"There are now {len(df_result_dysp)} unique combinations of [PatientID, ScreenData] of which {len(df_dysp)} with a dyspnoe score (and {df_result_dysp['Dyspnoe'].isna().sum()} missing)\")\n","\n","# An assumption is made here that the information regarding dyspnoe in other questions, like open note taking, cannot be converted 1 on 1 to a number."]},{"cell_type":"markdown","metadata":{"id":"vzEyXlgToYPi"},"source":["**2. ASA**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Oui8w6407nsF"},"outputs":[],"source":["def roman_to_int(s):\n","    roman = {'I': 1, 'II': 2, 'III': 3, 'IV': 4, 'V':5}\n","    if s in roman:\n","        return roman[s]\n","    else:\n","        return s"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oh7C-OfC1i7B","executionInfo":{"status":"ok","timestamp":1736428974459,"user_tz":-60,"elapsed":6465,"user":{"displayName":"Nathan de Pater","userId":"00637828017025432291"}},"outputId":"6af1471b-4059-450e-a7ed-55e367554e40"},"outputs":[{"output_type":"stream","name":"stdout","text":["the question IDs that were extracted are ['0000108305' 'CS00012904' '0000127166' 'CS00017191' 'CS00017194'\n"," 'CS00056727' 'CS00086982' 'CS00087322' 'CS00087377' 'CS00001071'\n"," 'CS00059513' 'CS00072268' 'CS00061798' 'CS00029078' 'LA00011607'\n"," 'CS00097063' 'LA00015770' 'CS00081398' 'CS00109954' 'CS00099714'\n"," 'CS00006278' 'CS00052926' 'CS00165707' '0000132459' '0000131636'\n"," 'CS00165740' 'CS00092782' 'CS00165561' 'CS00165590' '0000133365'\n"," 'CS00165777' '0000130216' 'CS00087020' 'CS00205722' 'CS00127543'\n"," 'CS00221898' '0000133930' '0000136215']\n","the question IDs that were not (succesfully) extracted are set()\n","['Y']\n","['In geval van ASA IV of V in principe geen endoscopie']\n","['1' '2' '3' 'II' 'I' '4' '5' 2 4 3 1 5]\n","[1 2 3 4 5]\n","ASA\n","2    73817\n","3    35144\n","1    27881\n","4     4088\n","5      187\n","Name: count, dtype: int64\n","There are a total of 141117 observations of ASA\n","There are a total of 62888 unique Patient, ScreenData combinations\n","There are now 81720 unique combinations of [PatientID, ScreenData] of which 62888 with an ASA score (and 18832 missing)\n"]}],"source":["### ASA\n","\n","## There are 14 question linked specifically to ASA (Check Excel),\n","asaQID = ['LA00011607', 'CS00072268', 'CS00056727', 'CS00087377', 'CS00165707', 'CS00165590', 'CS00165561', 'CS00165777', 'CS00165740', 'CS00086982', '0000130216', '0000131636', 'CS00087322', 'CS00087020']\n","# make sure to check the difference between 130216 and '130216'\n","\n","asa_mask = df_preop[\"QuestionID\"].isin(asaQID)\n","df_asa = df_preop[asa_mask].copy()\n","\n","# add the asa score to the dataframe\n","df_asa.loc[:, \"ASA\"] = \"unknown\"\n","\n","# Notice the line below that if there are questions missing in the extraction this should be invistigated. Perhaps something changed in the data scheme.\n","print(f\"the question IDs that were extracted are {df_preop['QuestionID'].unique()}\")\n","print(f\"the question IDs that were not (succesfully) extracted are {set(asaQID) - set(df_preop['QuestionID'].unique())}\")\n","\n","## Two questions contain no relevant information, you can check below:\n","# - CS00087322, no score, alleen Y in OpenTekstAnswer\n","# - CS00087020, no relevant information\n","print(df_preop[df_preop['QuestionID']=='CS00087322']['Antwoord'].unique())\n","print(df_preop[df_preop['QuestionID']=='CS00087020']['Antwoord'].unique())\n","df_asa = df_asa[df_asa[\"QuestionID\"].isin(set(asaQID) - {'CS00087322', 'CS00087020'})]\n","\n","## There are 3 types of notations left.\n","#  1) score as '(i)'    :  [LA00011607, CS00072268, CS00056727, CS00087377, CS00086982, 130216]\n","#  2) score as 'ASA II' :  [CS00165707, CS00165590, CS00165561, CS00165777, CS00165740]\n","#  3) score as 'i. ...' :  [131636]\n","asa_type1 = ['LA00011607', 'CS00072268', 'CS00056727', 'CS00087377', 'CS00086982', '0000130216']\n","asa_type2 = ['CS00165707', 'CS00165590', 'CS00165561', 'CS00165777', 'CS00165740']\n","asa_type3 = ['0000131636']\n","\n","# Convert the question according to the annotation type\n","df_asa.loc[df_asa['QuestionID'].isin(asa_type1), 'ASA'] = df_asa['Antwoord']\n","df_asa.loc[df_asa['QuestionID'].isin(asa_type2), 'ASA'] = df_asa['Antwoord'].apply(lambda x: roman_to_int(x.split(\" \")[1]) if isinstance(x, str) and len(x.split(\" \"))>1 else x)\n","df_asa.loc[df_asa['QuestionID'].isin(asa_type3), 'ASA'] = df_asa['Antwoord'].apply(lambda x: int(x[0]) if (isinstance(x, str)) and (x[0] in [f'{i}' for i in range(6)]) else x)\n","\n","# Some questions (CS00087377) are filled inconsistently, also using romam numerals\n","# print(df_asa.loc[df_asa['QuestionID'] == \"CS00087377\", 'Antwoord'].unique())\n","print(df_asa['ASA'].unique())\n","df_asa['ASA'] = df_asa['ASA'].apply(lambda x: roman_to_int(x))\n","df_asa['ASA'] = df_asa['ASA'].astype(int)\n","print(df_asa['ASA'].unique())\n","\n","# Check the division of values (to see whether there are still any unknown, or non int values\n","# df_asa.loc[df_asa['ASA'] == \"I\", 'ASA'] = 1\n","# df_asa.loc[df_asa['ASA'] == \"II\", 'ASA'] = 2\n","# df_asa.loc[df_asa['ASA'] == \"III\", 'ASA'] = 3\n","# df_asa.loc[df_asa['ASA'] == \"IV\", 'ASA'] = 4\n","# df_asa.loc[df_asa['ASA'] == \"V\", 'ASA'] = 5\n","\n","# Check the division of values (to see whether there are still any unknown, or non int values.)\n","print(df_asa['ASA'].value_counts())\n","df_asa[df_asa['ASA']=='unknown']['QuestionID'].unique()\n","\n","# df_asa = df_asa[['PatientID', 'ScreenData', 'ASA']]\n","print(f'There are a total of {len(df_asa)} observations of ASA')\n","print(f\"There are a total of {len(df_asa[['PatientID', 'ScreenData']].drop_duplicates())} unique Patient, ScreenData combinations\")\n","\n","# Simplify the dataframe, by keeping only 1 asa observation by ['patient', 'screendata'] combination\n","\n","# group the asa by PatientID, Screendata, and show the different ASA scores\n","df_asa['minASA'] = df_asa.groupby(['PatientID', 'ScreenData'])['ASA'].transform('min')\n","df_asa['maxASA'] = df_asa.groupby(['PatientID', 'ScreenData'])['ASA'].transform('max')\n","df_asa['meanASA'] = df_asa.groupby(['PatientID', 'ScreenData'])['ASA'].transform('mean')\n","df_asa['difASA'] = df_asa['maxASA'] - df_asa['minASA']\n","\n","# Analyze the distributions, and specifically the high values\n","# print(df_asa['difASA'].value_counts())\n","# df_asa.loc[df_asa['difASA'] == 4]\n","\n","# from this we can see that the ASA score tends not to change much, in about 90% of the cases it remains the same, 10% it changes 1, 1% it changes 2, .1% it changes 3, .01% it changes 4\n","# However, since there are some big differences, it makes the most sense to take the latest version, seeing that the ASA score can apparently greatly increase in a short time. (a decrease is less likely)\n","\n","df_asa = df_asa.sort_values(by=['Date Question'])\n","df_asa = df_asa.drop_duplicates(subset=['PatientID', 'ScreenData'], keep='last')\n","\n","asa_cols = ['PatientID', 'ScreenData', 'ASA', 'Physician department Name', 'Date Question']\n","df_asa = df_asa[asa_cols]\n","\n","# ASA staat nog op andere manieren ook\n","\n","print(f\"There are now {len(df_result)} unique combinations of [PatientID, ScreenData] of which {len(df_asa)} with an ASA score (and {len(df_result)-len(df_asa)} missing)\")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SgDx4S_4JIBX"},"outputs":[],"source":["# This patient gets a score of 1 on the same day as receiving a score of 5.\n","# df_asa.loc[df_asa['PatientID'] == \"788671672c4c56310881203e5804285a82538ac8\"]"]},{"cell_type":"markdown","source":["3. BMI"],"metadata":{"id":"AfeNf6TRAR52"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QBlzdmbOoxWV","executionInfo":{"status":"ok","timestamp":1736428976946,"user_tz":-60,"elapsed":2490,"user":{"displayName":"Nathan de Pater","userId":"00637828017025432291"}},"outputId":"6cc7dc70-d317-4da2-bdb3-07647f22a03b"},"outputs":[{"output_type":"stream","name":"stdout","text":["unused codes are set()\n","amount bmi nan 0\n","[]\n","There are a total of 229292 observations of BMI\n","There are a total of 79674 unique Patient, ScreenData combinations\n","229292\n","228725\n"]}],"source":["## BMI\n","\n","bmiQID = [\"0000108305\",\"0000132459\", \"0000133365\",\"0000136215\",\"CS00001071\",\"CS00006278\",\"CS00012904\",\"CS00017191\",\"CS00052926\",\"CS00061798\",\"CS00081398\",\"CS00097063\",\"CS00099714\",\"CS00109954\",\"CS00205722\",\"CS00221898\"]\n","\n","bmi_mask = df_preop[\"QuestionID\"].isin(bmiQID)\n","df_bmi = df_preop[bmi_mask].copy()\n","\n","# First set the entire column to none, so we can see which ones are filled, and which ones have no matches\n","df_bmi[\"BMI\"] = None\n","\n","\n","# There are two main ways in which the BMI is stored. The first is like: OBJECTID=0,VALUE1=0. The second is like: 0'\n","# These are split into objectid and regid, and treated seperately here.\n","objectid  = [\"0000132459\", \"CS00012904\", \"CS00052926\", \"CS00061798\", \"CS00081398\", \"CS00097063\", \"CS00099714\", \"CS00109954\"]\n","regid     = [\"0000108305\", \"CS00001071\", \"0000133365\", \"0000136215\", \"CS00006278\", \"CS00017191\", \"CS00205722\", \"CS00221898\"]\n","\n","print(f'unused codes are {set(bmiQID)-set(objectid)-set(regid)}')\n","\n","objectid_mask = df_bmi[\"QuestionID\"].isin(objectid)\n","regid_mask    = df_bmi[\"QuestionID\"].isin(regid)\n","\n","# For the regid it is simply a matter of copying the values over to the correct column\n","df_bmi.loc[regid_mask,    \"BMI\"] = df_bmi[\"Antwoord\"]\n","\n","# Small function used for the regid type, to get the BMI extracted\n","def convert_object(x):\n","  if len(x.split('\"')) == 1:\n","    return x.split(\",\")[1].split(\"=\")[1]\n","  return x.split('\"')[1].split(\"=\")[1]\n","\n","df_bmi.loc[objectid_mask, \"BMI\"] = df_bmi.loc[objectid_mask, \"Antwoord\"].apply(lambda x: convert_object(x))\n","\n","# convert all BMI to float\n","def to_float(x):\n","  try:\n","    return float(x)\n","  except TypeError:\n","    return None\n","  except ValueError:\n","    x = x.replace(\",\", \".\")\n","    return float(x)\n","\n","df_bmi[\"BMI\"] = df_bmi[\"BMI\"].apply(lambda x: to_float(x))\n","\n","# These are the entries of answer that are not yet classified:\n","print(f'amount bmi nan {df_bmi[\"BMI\"].isna().sum()}')\n","print(df_bmi[df_bmi[\"BMI\"].isna()]['Antwoord'].unique())\n","# These values are all incredibly high or low, with both 'ja' and 'nee'. An assumption is made that these are invalid BMI scores, even though the low 40's may be valid.\n","\n","# Drop any entries without a value for BMI\n","df_bmi.dropna(subset=[\"BMI\"], inplace=True)\n","\n","print(f'There are a total of {len(df_bmi)} observations of BMI')\n","print(f\"There are a total of {len(df_bmi[['PatientID', 'ScreenData']].drop_duplicates())} unique Patient, ScreenData combinations\")\n","\n","df_bmi[\"BMI\"].describe()\n","\n","#drop BMI under 12 or over 60. This is done here, so if there was a case of data entry, and another case in the past 6 months which does accurately reveal the BMI, it should be used instead.\n","print(len(df_bmi))\n","df_bmi = df_bmi[df_bmi[\"BMI\"]>12]\n","df_bmi = df_bmi[df_bmi[\"BMI\"]<60]\n","print(len(df_bmi))\n","\n","df_bmi = df_bmi.drop_duplicates(subset=['PatientID', 'ScreenData'], keep='last')\n","bmi_cols = ['PatientID', 'ScreenData', 'BMI', 'Physician department Name', \"Date Question\"]\n","\n","df_bmi = df_bmi[bmi_cols]"]},{"cell_type":"code","source":["# check whether there is a difference between extracted QIDs and the used QIDs\n","print(f\"the question IDs that were extracted are {df_preop['QuestionID'].unique()}\")\n","print(f\"the ASA IDs that were not (succesfully) extracted are {set(asaQID) - set(df_preop['QuestionID'].unique())}\")\n","print(f\"the BMI IDs that were not (succesfully) extracted are {set(bmiQID) - set(df_preop['QuestionID'].unique())}\")\n","print(f\"the Dyspnoe IDs that were not (succesfully) extracted are {set(dyspQID) - set(df_preop['QuestionID'].unique())}\")\n","\n","print(f\"the question IDS that were not used are {set(df_preop['QuestionID'].unique())-set(asaQID)-set(bmiQID)-set(dyspQID)}\")\n","# note that the following codes do not contain information (and could be removed from the sql): '0000133930', '0000127166', 'CS00017194', 'CS00092782', 'CS00029078'"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SiEYqe2P6bU3","executionInfo":{"status":"ok","timestamp":1736428977604,"user_tz":-60,"elapsed":660,"user":{"displayName":"Nathan de Pater","userId":"00637828017025432291"}},"outputId":"0b518793-0ec1-4f99-9ed8-562f536cfa10"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["the question IDs that were extracted are ['0000108305' 'CS00012904' '0000127166' 'CS00017191' 'CS00017194'\n"," 'CS00056727' 'CS00086982' 'CS00087322' 'CS00087377' 'CS00001071'\n"," 'CS00059513' 'CS00072268' 'CS00061798' 'CS00029078' 'LA00011607'\n"," 'CS00097063' 'LA00015770' 'CS00081398' 'CS00109954' 'CS00099714'\n"," 'CS00006278' 'CS00052926' 'CS00165707' '0000132459' '0000131636'\n"," 'CS00165740' 'CS00092782' 'CS00165561' 'CS00165590' '0000133365'\n"," 'CS00165777' '0000130216' 'CS00087020' 'CS00205722' 'CS00127543'\n"," 'CS00221898' '0000133930' '0000136215']\n","the ASA IDs that were not (succesfully) extracted are set()\n","the BMI IDs that were not (succesfully) extracted are set()\n","the Dyspnoe IDs that were not (succesfully) extracted are set()\n","the question IDS that were not used are {'0000133930', 'CS00029078', '0000127166', 'CS00017194', 'CS00092782'}\n"]}]},{"cell_type":"markdown","source":["# 3. Combining Patientd data with SES scores\n"],"metadata":{"id":"dDWRZO_mCEjA"}},{"cell_type":"code","source":["df_patient_loaded = pd.read_csv(base_dir+ \"data/\"+folder_name+\"/patient_wrongbed.csv\", delimiter =\";\")"],"metadata":{"id":"u0BsqEDIOvmJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zH1S-KLHtVvr"},"outputs":[],"source":["# This line is included so the whole df does not need to be reloaded if something goes wrong.\n","df_patient = df_patient_loaded.copy()\n","# Since the model only takes in numbers, the gender needs to be translated. 1 is male.\n","df_patient[\"Geslacht\"] = df_patient[\"Geslacht\"].apply(lambda x: 1 if x == \"M\" else 0)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"CXQqhsiGjFlP"},"outputs":[],"source":["# Here the SES dataset is loaded, rows [0,1] contain general info, and row three contains units like % which is not relevant in the df\n","# An assumption is made that the ses with students excluded has more predictive value, as students are rarely undergoing surgery, and thus should not influence the SES scores.\n","df_ses = pd.read_excel(base_dir+ \"/data/other/SES_PC4_2021_2022_Incl_ExclStudentenV4.xlsx\", header = [0], sheet_name=4, skiprows=[0,1,3])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"id":"FkPycRcHRGJ5","executionInfo":{"status":"ok","timestamp":1736428996384,"user_tz":-60,"elapsed":15,"user":{"displayName":"Nathan de Pater","userId":"00637828017025432291"}},"outputId":"72c0abf2-b396-49f1-9826-8a26d4cb0e4d"},"outputs":[{"output_type":"stream","name":"stdout","text":["count    962.000000\n","mean      43.866944\n","std       49.648242\n","min        0.000000\n","25%        0.000000\n","50%        0.000000\n","75%      100.000000\n","max      100.000000\n","Name: Aantal huishoudens, dtype: float64\n","count    8118.000000\n","mean        0.116335\n","std         0.206304\n","min        -0.813000\n","25%         0.000000\n","50%         0.135000\n","75%         0.260000\n","max         0.884000\n","Name: Gemiddelde SES WOA totaalscore, dtype: float64\n","                                           Patiëntnummer  Opnamenummer  \\\n","1086   0x5664785A95B182FE7D281E3E7FB2FBD7C02753ED3B0E...    2001161461   \n","3121   0xAD622F34FBCDFB15B015DEDC12B19F2FC06F1E2CC485...    2001203852   \n","3537   0x42C4056EB40CCB910341170747567E36382A71DD57CE...    2000991206   \n","4308   0x92F18C3B2D1871826691D51EB1F289A9CE9B72CB088A...    2001007886   \n","5397   0xF711E5BB7ED8DACB46D29394732234FB821C40E1279D...    2001133010   \n","5830   0x9F8D35B66B2C0C3DED1CEC3A7887DEC66B28CFE9AA92...    2001123359   \n","8543   0x92F18C3B2D1871826691D51EB1F289A9CE9B72CB088A...    2001007886   \n","9868   0x8061C8F091FD3E4C9474F592AE29FBFD7121B52A6FBB...    2000927846   \n","12599  0xB9E743DD26EDBED80BB5CDACC800E77E8D8FFDE6FF99...    2001015148   \n","28163  0xBB4EEE7D6ACA2CA2DB7A4B6D126BB52B1F05116B1F22...    2001029355   \n","30045  0xB831244771254321D16977921858EBC914FF444CF452...    2000759591   \n","40670  0x42C4056EB40CCB910341170747567E36382A71DD57CE...    2000991743   \n","44253  0xE6F20E56FE7E8E93DDB7995F80B1169F8AB532323E35...    2001110664   \n","51418  0xB9E743DD26EDBED80BB5CDACC800E77E8D8FFDE6FF99...    2001015148   \n","52490  0xBC82DC29C450847A16123FB632337E45847C2BBFACCA...    2000867105   \n","53242  0xB53139D727C30258BB65C6A2D808C2606CA9611B0290...    2001181929   \n","53292  0xB8E9A6B7F514E8FFB4845D864CF378C5025F6BD91153...    2001039536   \n","54272  0x128A425B3112387ADF2D3DCE2F57A20FC8D4F87FACBC...    2001176286   \n","54737  0xB53139D727C30258BB65C6A2D808C2606CA9611B0290...    2001181929   \n","\n","       Geslacht  Opnameleeftijd Overleden tijdens opname  \\\n","1086          1              53                      Nee   \n","3121          0              34                      Nee   \n","3537          1              51                      Nee   \n","4308          1              31                      Nee   \n","5397          0              80                      Nee   \n","5830          1              41                      Nee   \n","8543          1              31                      Nee   \n","9868          1              45                      Nee   \n","12599         1              35                      Nee   \n","28163         1              54                      Nee   \n","30045         0              22                      Nee   \n","40670         1              51                      Nee   \n","44253         1              79                      Nee   \n","51418         1              35                      Nee   \n","52490         1              60                      Nee   \n","53242         1              41                      Nee   \n","53292         1              55                      Nee   \n","54272         1              49                      Nee   \n","54737         1              41                      Nee   \n","\n","              Opname DatumTijd        Ontslag DatumTijd  \\\n","1086   2022-09-20 22:14:00.000  2022-09-21 09:15:00.000   \n","3121   2023-06-24 06:20:00.000  2023-06-24 11:36:00.000   \n","3537   2019-07-05 08:46:00.000  2019-07-09 19:05:00.000   \n","4308   2019-10-26 09:12:00.000  2019-10-29 20:10:00.000   \n","5397   2022-03-13 14:53:00.000  2022-03-18 13:30:00.000   \n","5830   2022-01-08 22:39:00.000  2022-01-14 11:15:00.000   \n","8543   2019-10-26 09:12:00.000  2019-10-29 20:10:00.000   \n","9868   2018-05-27 00:57:00.000  2018-05-27 11:54:00.000   \n","12599  2019-12-12 22:02:00.000  2019-12-13 11:16:00.000   \n","28163  2020-03-18 21:25:00.000  2020-03-22 14:32:00.000   \n","30045  2016-04-22 16:26:00.000  2016-04-23 18:00:00.000   \n","40670  2019-07-19 09:53:00.000  2019-07-20 18:15:00.000   \n","44253  2021-10-28 10:28:00.000  2021-11-23 11:22:00.000   \n","51418  2019-12-12 22:02:00.000  2019-12-13 11:16:00.000   \n","52490  2017-06-22 17:20:00.000  2017-07-03 14:39:00.000   \n","53242  2023-01-31 11:38:00.000  2023-02-02 19:09:00.000   \n","53292  2020-06-20 18:49:00.000  2020-07-07 11:44:00.000   \n","54272  2022-12-23 10:46:00.000  2022-12-27 13:48:00.000   \n","54737  2023-01-31 11:38:00.000  2023-02-02 19:09:00.000   \n","\n","       Klinische beddagen (d)  Verkeerd bed ligduur (d)       Verkeerd bed  \\\n","1086                      NaN                       NaN  geen verkeerd bed   \n","3121                      NaN                       NaN  geen verkeerd bed   \n","3537                      NaN                       NaN  geen verkeerd bed   \n","4308                      NaN                       NaN  geen verkeerd bed   \n","5397                      NaN                       NaN  geen verkeerd bed   \n","5830                      NaN                       NaN  geen verkeerd bed   \n","8543                      NaN                       NaN  geen verkeerd bed   \n","9868                      NaN                       NaN  geen verkeerd bed   \n","12599                     NaN                       NaN  geen verkeerd bed   \n","28163                     NaN                       NaN  geen verkeerd bed   \n","30045                     NaN                       NaN  geen verkeerd bed   \n","40670                     NaN                       NaN  geen verkeerd bed   \n","44253                    21.0                       5.0       verkeerd bed   \n","51418                     NaN                       NaN  geen verkeerd bed   \n","52490                     NaN                       NaN  geen verkeerd bed   \n","53242                     NaN                       NaN  geen verkeerd bed   \n","53292                     NaN                       NaN  geen verkeerd bed   \n","54272                     NaN                       NaN  geen verkeerd bed   \n","54737                     NaN                       NaN  geen verkeerd bed   \n","\n","                 Herkomst  Spoed  Totale ligduur (d) Opname specialisme  \\\n","1086   Eigen woonomgeving      1                   2                CHI   \n","3121   Eigen woonomgeving      1                   1                CHI   \n","3537   Eigen woonomgeving      1                   5                CHI   \n","4308   Eigen woonomgeving      1                   4                CHI   \n","5397   Eigen woonomgeving      1                   6                CHI   \n","5830   Eigen woonomgeving      1                   7                CHI   \n","8543   Eigen woonomgeving      1                   4                CHI   \n","9868   Eigen woonomgeving      1                   1                CHI   \n","12599  Eigen woonomgeving      1                   2                CHI   \n","28163  Eigen woonomgeving      1                   5                CHI   \n","30045  Eigen woonomgeving      1                   2                CHI   \n","40670  Eigen woonomgeving      0                   2                CHI   \n","44253  Eigen woonomgeving      0                  27                ORT   \n","51418  Eigen woonomgeving      1                   2                CHI   \n","52490  Eigen woonomgeving      1                  12                CHI   \n","53242  Eigen woonomgeving      1                   3                ORT   \n","53292  Eigen woonomgeving      1                  18                CHI   \n","54272  Eigen woonomgeving      1                   5                ORT   \n","54737  Eigen woonomgeving      1                   3                ORT   \n","\n","           Ontslagbestemming DBC code Postcode cijfers  \\\n","1086      Eigen woonomgeving      280              NaN   \n","3121      Eigen woonomgeving      NaN              NaN   \n","3537      Eigen woonomgeving      222              NaN   \n","4308      Eigen woonomgeving      224              NaN   \n","5397   Ziekenhuis buitenland      218              NaN   \n","5830      Eigen woonomgeving      160              NaN   \n","8543      Eigen woonomgeving      610              NaN   \n","9868      Eigen woonomgeving      NaN              NaN   \n","12599     Eigen woonomgeving      271              NaN   \n","28163     Eigen woonomgeving      160              NaN   \n","30045     Eigen woonomgeving      113              NaN   \n","40670     Eigen woonomgeving      222              NaN   \n","44253     Eigen woonomgeving     1701              NaN   \n","51418     Eigen woonomgeving      610              NaN   \n","52490     Eigen woonomgeving      420              NaN   \n","53242     Eigen woonomgeving     4110              NaN   \n","53292     Eigen woonomgeving      336              NaN   \n","54272     Eigen woonomgeving      218              NaN   \n","54737     Eigen woonomgeving     3025              NaN   \n","\n","                             Diagnose  \n","1086   Open wond eenvoudig,bijv snijw  \n","3121                              NaN  \n","3537   tibia(± fibula)nno(excl enkel)  \n","4308                            enkel  \n","5397      Femur, proximaal (+ collum)  \n","5830      Lokale inf huid en subcutis  \n","8543       ATLS-opvang trauma ISS <16  \n","9868                              NaN  \n","12599                        Multiple  \n","28163     Lokale inf huid en subcutis  \n","30045                    appendicitis  \n","40670  tibia(± fibula)nno(excl enkel)  \n","44253   Arthrosis: Bekken/heup/b.been  \n","51418      ATLS-opvang trauma ISS <16  \n","52490            P.A.O.D. 4, gangreen  \n","53242      ATLS-opvang trauma ISS <16  \n","53292           Mesenteriaal trombose  \n","54272     Femur, proximaal (+ collum)  \n","54737                           Enkel  \n"]}],"source":["# Analysis reveals there are a number of values which are \".\" instead of containing data.\n","print(df_ses[df_ses[\"Gemiddelde SES WOA totaalscore\"]==\".\"][\"Aantal huishoudens\"].describe())\n","# These are the case for locations with 0-100 people living in a postal code. Here an assumption needs to be made to fill in this missing score.\n","# - set them to 0, so assume they are average (x)\n","# - set them to the closest postal code average\n","# - set them to the average of small postal codes (200-XXX) inhabitants.\n","# Another assumption is made that the SES remains rather constant over time, seeing that we only take the current SES score of a neighborhood\n","# average_ses_small_postal_code = df_ses.loc[(df_ses[\"Aantal huishoudens\"]>100) & (df_ses[\"Aantal huishoudens\"]<1000)][\"Gemiddelde SES WOA totaalscore\"].mean()\n","df_ses.loc[df_ses[\"Gemiddelde SES WOA totaalscore\"]==\".\",\"Gemiddelde SES WOA totaalscore\"] = 0\n","df_ses[\"Gemiddelde SES WOA totaalscore\"] = df_ses[\"Gemiddelde SES WOA totaalscore\"].astype(float)\n","print(df_ses[\"Gemiddelde SES WOA totaalscore\"].describe())\n","\n","# We have an assumption that the SES data of 2022 is predictive for surgeries in 2013\n","df_ses = df_ses.loc[df_ses[\"Verslagjaar\"]==2022]\n","df_ses = df_ses[[\"Viercijferige postcode\", \"Gemiddelde SES WOA totaalscore\"]]\n","\n","global postcodes\n","postcodes = df_ses[\"Viercijferige postcode\"].unique()\n","\n","# There are a number of patients where no postal codes can be retrieved. Closer inspection reveals that this came from patients from germany, russia etc. so it is to be expected.\n","# An assumption is made here to use ses = 0 here\n","print(df_patient.loc[df_patient[\"Postcode cijfers\"].isna()])\n","df_patient.loc[df_patient[\"Postcode cijfers\"].isna(), \"Postcode cijfers\"] = 0"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Pc0aTgM8XU50"},"outputs":[],"source":["# This code contains two assumptions.\n","# - The first has to do with invalid (international) postal codes like \"D-47\" \"38-3\". Here we assume the average SES score of 0.\n","# - The second assumption is that if the postal code is not in the CBS dataset, the average SES score is also 0\n","\n","def postal_code_to_ses(postal_code):\n","  try:\n","    postal_code = int(postal_code)\n","  except ValueError:\n","    # This is the case if the postal code is not only numbers\n","    return \"error\"\n","  except TypeError:\n","    # This is the case if the postal code is an int or datetime?\n","    print(postal_code)\n","    return \"error\"\n","  if postal_code in postcodes:\n","    ses = df_ses[df_ses[\"Viercijferige postcode\"] == postal_code][\"Gemiddelde SES WOA totaalscore\"]\n","    return ses.iloc[0]\n","  return \"error\""]},{"cell_type":"code","source":["df_patient.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gZwzw98ZhvZo","executionInfo":{"status":"ok","timestamp":1736428996385,"user_tz":-60,"elapsed":13,"user":{"displayName":"Nathan de Pater","userId":"00637828017025432291"}},"outputId":"b9cfd11f-9e15-4860-ffac-8dae5e8d7f31"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Patiëntnummer', 'Opnamenummer', 'Geslacht', 'Opnameleeftijd',\n","       'Overleden tijdens opname', 'Opname DatumTijd', 'Ontslag DatumTijd',\n","       'Klinische beddagen (d)', 'Verkeerd bed ligduur (d)', 'Verkeerd bed',\n","       'Herkomst', 'Spoed', 'Totale ligduur (d)', 'Opname specialisme',\n","       'Ontslagbestemming', 'DBC code', 'Postcode cijfers', 'Diagnose'],\n","      dtype='object')"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OzuGbDz1Xj0w","executionInfo":{"status":"ok","timestamp":1736429021645,"user_tz":-60,"elapsed":25266,"user":{"displayName":"Nathan de Pater","userId":"00637828017025432291"}},"outputId":"91107373-1e5f-4afd-d268-04441be0a9fd"},"outputs":[{"output_type":"stream","name":"stdout","text":["There are 399 patients for which no SES score could be found so the average of 0 was used.\n","And their postal codes were ['4763' 'BLB2' '0000' '3680' '31-0' '400 ' '5900' '4787' 0 'CA 9' '5137'\n"," '3640' '36-0' '4426' '1805' '5906' 'LV 4' '4749' '4757' '2370' '2440'\n"," '5942' '4577' '12-2' '4123' '5902' '5132' '5149' '4146' ' ' '73-1' '21-4'\n"," '9880' '4779' '4780' '0941' '4792' '59-6' '0303' '3798' '2560' '55-2'\n"," '2670' '16-4' '2258' 'N11 ' '0166' '4137' '62-8' '4760' '0710' '56-4'\n"," '41-9' '2621' '64-1' '2300' '4160' '99-3' '38-5' '41-3' '9100' '2146'\n"," '9800' '3724' 'DE56' '5420' '4135' '9000' '3509' '6908' '0801' '7500'\n"," '26-6' '22-6' '62-5' '7160' '56-3' '1234' '6220' '4248' '78-5' 'KT11'\n"," '18-4' '1070' '5830' '0628' '0X18' '0650' '0' '5560' '4750' '9620' 'piso'\n"," '3530' '38-2' '37-7' '4420' '34-7' '38-7' '6202' '0365' '74-3' '4920'\n"," '3360' 'D-52' '7620' '5214' '3450' '4790' '4058' '7632' '4717' '4767'\n"," '4937' '64-9' '4232' '0022' '3960' 'D-47' '4136' '5959' '6743' '31-6'\n"," '2660' '72-6' '8300' '5110' '5957' '5452' '62-3' 'SN8 ' '26-0' '2010'\n"," '6622' '0764' '38-3' '40-0' '4078' '3320' '4753' 'HA3 ' '6754' ' 417'\n"," '76-1' '41-2' '4716' '44-3' '76-0' '5965' '0800' '6946' '8870' '3770'\n"," '33-3' '63-6' '4552' '8202' '5207' '44-2' '88-1' '3793' '87-1' '120'\n"," '4067' 'A92P' '2475' '9225' '3500' '59-1' '4095' '5150' '47-1' '6912'\n"," '4604' 'GL16' '4573' '9238' '7403' '3950' '5729' '4736' '1152' '3600'\n"," '4690' '3650' '99-4' '97-3' '2500' '5082' '2900' 'LV-3' '3620' '47-3'\n"," '11-0' '5183' '57-2' '4066' '4648' '4022' '9260' '3810' '6244' '4723'\n"," '5000' '89-3' '4489' '11-2' '5393' 'WA15' '13-3' '5178' '1100' '10-6'\n"," '3980' '2880' '87-3' ' 47-' '77-2' '4640' '5208' '4603' 'BFPO' '41-5'\n"," '4047' '0470' '0775' '0338' '7407']\n"]}],"source":["df_patient[\"SES\"] = df_patient[\"Postcode cijfers\"].apply(lambda x: postal_code_to_ses(x))\n","\n","print(f\"There are {len(df_patient.loc[df_patient['SES']=='error'])} patients for which no SES score could be found so the average of 0 was used.\")\n","print(f\"And their postal codes were {df_patient.loc[df_patient['SES']=='error','Postcode cijfers'].unique()}\")\n","# print(f\"and their woonplaatsen are {df_patient.loc[df_patient['SES']=='error','Woonplaats'].unique()}\")\n","\n","df_patient.loc[df_patient['SES']=='error', 'SES'] = 0\n","\n","# There are also 12 patients from Venlo (5900) and (piso), which are not in the CBS dataset, presumably because there are not enough people living there."]},{"cell_type":"markdown","source":["# 4. Adding ICD"],"metadata":{"id":"e6pDhRRPDvPY"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"XpiKrDklRH2h","executionInfo":{"status":"ok","timestamp":1736429022290,"user_tz":-60,"elapsed":648,"user":{"displayName":"Nathan de Pater","userId":"00637828017025432291"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"0e864ca4-f2c4-42cb-e776-42943672fc03"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                           PATIENTNR     VISITNR ICD_CODE\n","0  0x294F90E4331561DA1C577902013E9B8D1F1FC240A3CF...  2000155696    C50.9\n","1  0x0F325B6AA2120DCE0D8DE6C0C217BE85ADCA14AF2C72...  2000468499    Z09.9\n","2  0x7452AE0ADCF7185D9D1961EC330FE5B33F256A2E7B47...  2000469984      N40\n","3  0xE8D5E136F5B239CC13ECAF29DCBBB93ED9A29CDDE455...  2000470434    C50.9\n","4  0x20CCCE792280CBADEA3C87F996FD580E0740AA815FC0...  2000479908    C50.9"],"text/html":["\n","  <div id=\"df-07eaa704-4c6f-42f3-895d-cf6038623070\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PATIENTNR</th>\n","      <th>VISITNR</th>\n","      <th>ICD_CODE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0x294F90E4331561DA1C577902013E9B8D1F1FC240A3CF...</td>\n","      <td>2000155696</td>\n","      <td>C50.9</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0x0F325B6AA2120DCE0D8DE6C0C217BE85ADCA14AF2C72...</td>\n","      <td>2000468499</td>\n","      <td>Z09.9</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0x7452AE0ADCF7185D9D1961EC330FE5B33F256A2E7B47...</td>\n","      <td>2000469984</td>\n","      <td>N40</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0xE8D5E136F5B239CC13ECAF29DCBBB93ED9A29CDDE455...</td>\n","      <td>2000470434</td>\n","      <td>C50.9</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0x20CCCE792280CBADEA3C87F996FD580E0740AA815FC0...</td>\n","      <td>2000479908</td>\n","      <td>C50.9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-07eaa704-4c6f-42f3-895d-cf6038623070')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-07eaa704-4c6f-42f3-895d-cf6038623070 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-07eaa704-4c6f-42f3-895d-cf6038623070');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cbd11552-a633-4afa-a782-1cfcbe043bb1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cbd11552-a633-4afa-a782-1cfcbe043bb1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cbd11552-a633-4afa-a782-1cfcbe043bb1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_icd","summary":"{\n  \"name\": \"df_icd\",\n  \"rows\": 62426,\n  \"fields\": [\n    {\n      \"column\": \"PATIENTNR\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 42964,\n        \"samples\": [\n          \"0xFD06D2A2121ED61AC402DC06FA4731BE9DB3B1535F5A1D3C16084C10BB82EFB4\",\n          \"0x50F83972FC2FD093C736B4F8CE789CC386CFF3A5D9475335C78F9578626827B2\",\n          \"0x6CEB84D270951AAEEB6456AEB6FD72A7565C45266A5FD3B3C6113186768C0703\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VISITNR\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 165879,\n        \"min\": 2000155696,\n        \"max\": 2001237286,\n        \"num_unique_values\": 62426,\n        \"samples\": [\n          2000701683,\n          2000926857,\n          2000922462\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ICD_CODE\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1829,\n        \"samples\": [\n          \"I87.9\",\n          \"M25.52\",\n          \"S86.8\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":44}],"source":["# Next the table with the ICD codes should be loaded in.\n","df_icd = pd.read_csv(base_dir+ \"data/\"+folder_name+\"/patient_icd.csv\", delimiter=';')\n","df_icd.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"odjOO0U2Rd1_","executionInfo":{"status":"ok","timestamp":1736429022290,"user_tz":-60,"elapsed":12,"user":{"displayName":"Nathan de Pater","userId":"00637828017025432291"}},"outputId":"4ead4830-7d91-4286-bd33-c3a046db2153"},"outputs":[{"output_type":"stream","name":"stdout","text":["there are 62426 rows in the icd_dataset\n","there are 42964 unique patients in the icd_dataset\n","there are 62426 combinations of patient and visitnr\n","There are 16010 cases in which no ICD 10 was found\n"]}],"source":["print(f\"there are {len(df_icd)} rows in the icd_dataset\")\n","print(f\"there are {len(df_icd['PATIENTNR'].unique())} unique patients in the icd_dataset\")\n","print(f\"there are {len(df_icd.drop_duplicates(subset=['PATIENTNR', 'VISITNR']))} combinations of patient and visitnr\")\n","\n","# merge df_patient with the icd codes based on PatientID and VISITNR\n","df_patient_icd = pd.merge(df_patient, df_icd, how='left', left_on=['Patiëntnummer', 'Opnamenummer'], right_on=['PATIENTNR', 'VISITNR'])\n","\n","print(f\"There are {df_patient_icd['ICD_CODE'].isna().sum()} cases in which no ICD 10 was found\")\n","# This is currently 25% which is definitely high"]},{"cell_type":"code","source":["# Inspecting some cases for which no ICD is available\n","df_patient_icd[df_patient_icd['ICD_CODE'].isna()].head(25)\n","# From this histogram it becomes very clear that these codes are missing mostly because there has been a change in how things are stored in the database\n","# df_patient_icd[df_patient_icd['ICD_CODE'].isna()]['Opname DatumTijd'].hist()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WfSTIeQ-Ew2F","executionInfo":{"status":"ok","timestamp":1736429022290,"user_tz":-60,"elapsed":10,"user":{"displayName":"Nathan de Pater","userId":"00637828017025432291"}},"outputId":"48db4b7f-ad37-4d2b-ad35-7597009b5b68"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                        Patiëntnummer  Opnamenummer  Geslacht  \\\n","0   0xBB6519A3F69B6A39A6B0809755FA0932F922508BF9D3...    2000559578         1   \n","3   0xD337F10FBF25D09972F8202C00A0C8DDC8461755063E...    2000512460         0   \n","6   0xB44659AE4EE3AD4DCEC2FE4025F5CCE634ECA496BC21...    2000633450         1   \n","9   0xD33BCB7669B72D481D6307E35F9F24AAE896FBC18729...    2000568836         0   \n","10  0x4BE4F3268549A32E055B0478D623363ED3A0C1F9FA79...    2000536630         1   \n","11  0x30D8D00172C0D1298513D4FA133D04843AF27B4F5573...    2000872170         1   \n","14  0xEB63FD197DFD28B1BA620E43605A310F353C7A1A0D69...    2000562321         1   \n","15  0x28608725B0FA3806BDF40F7061DF718270A31DC09BDF...    2000574929         1   \n","16  0x2A60523E311F8E082A6D23BBC059F13889167C303931...    2001224950         0   \n","17  0xB65561A2F3A24E36572CE39F89D52ABFE74239A95C89...    2000725341         1   \n","20  0x0ADB9C524D98D5A7AF2C26866509B1BDE1FCB650A63D...    2000557964         1   \n","23  0xB5C34DF98D0885A3CA776D773BDCA821E560493949F2...    2000589091         1   \n","27  0x677F539EC1DAC59C6EC17B59FD608641FF7F68B94663...    2000505536         0   \n","33  0xADB28FA0D0E721EBAD0B5587C725958181F3C411B55E...    2000557478         1   \n","35  0xB51AE69B822E01648FC8D09C0EBF8F682FB95E4CF86B...    2000660253         1   \n","38  0x77AA53FF418AA2FA871FF25B4E85DB0E205C185C7D65...    2000650449         1   \n","39  0xCB7759AAC3F0EF8809043323BCEE65FE07512DB2F3E7...    2000592426         0   \n","41  0x802BAE7492310DD7733EA4D388AF0FCFD2D5D50038CF...    2000498788         0   \n","44  0x5740BAC080BE4CF407531B554F9657034C10702B4BE6...    2001070356         0   \n","45  0xF49EFC1D27028254B660CAB6BFEAC2FC3DA1A8649731...    2000522950         0   \n","57  0xC9454D09B0342A5FE9B6799C1D6CDA271CD35DB497E5...    2001230297         0   \n","65  0xBD955F9AFD54159E9362965177B4153ABE54CEDDD1D6...    2001118973         0   \n","68  0xBF81FB95477866C36B972305A2D6257D55056BBA5234...    2000587723         1   \n","70  0x1683D159612B27795C318D549A6E27E2F234EF9E0B2C...    2000568996         1   \n","71  0xC64AAC1384717DF262C751AB32FCCA5B1A5BC345B04E...    2000596272         1   \n","\n","    Opnameleeftijd Overleden tijdens opname         Opname DatumTijd  \\\n","0               78                      Nee  2014-04-23 06:23:00.000   \n","3               81                      Nee  2013-09-02 06:30:00.000   \n","6               76                      Nee  2015-03-17 10:15:00.000   \n","9               93                      Nee  2014-04-22 17:15:00.000   \n","10              60                      Nee  2013-11-16 01:38:00.000   \n","11              81                       Ja  2017-07-12 16:51:00.000   \n","14              56                      Nee  2014-03-24 04:32:00.000   \n","15              19                      Nee  2014-05-27 10:00:00.000   \n","16              73                      Nee  2023-11-12 22:47:00.000   \n","17              75                       Ja  2016-02-04 10:30:00.000   \n","20              69                      Nee  2014-02-28 08:57:00.000   \n","23              63                      Nee  2014-08-10 05:27:00.000   \n","27              57                      Nee  2013-08-13 06:30:00.000   \n","33              62                      Nee  2014-04-01 06:30:00.000   \n","35              20                      Nee  2015-04-26 17:11:00.000   \n","38              79                      Nee  2015-04-22 06:30:00.000   \n","39              84                      Nee  2014-10-13 10:30:00.000   \n","41              76                      Nee  2013-06-07 06:30:00.000   \n","44              76                      Nee  2021-03-10 06:30:00.000   \n","45              84                      Nee  2013-09-10 10:44:00.000   \n","57              82                      Nee  2023-12-20 14:04:00.000   \n","65              71                      Nee  2021-12-09 16:14:00.000   \n","68              15                      Nee  2014-07-31 15:31:00.000   \n","70              56                      Nee  2014-04-23 12:28:00.000   \n","71              73                      Nee  2014-10-02 07:00:00.000   \n","\n","          Ontslag DatumTijd  Klinische beddagen (d)  Verkeerd bed ligduur (d)  \\\n","0   2014-04-26 10:25:00.000                     NaN                       NaN   \n","3   2013-09-07 11:00:00.000                     NaN                       NaN   \n","6   2015-03-20 15:30:00.000                     NaN                       NaN   \n","9   2014-05-04 11:15:00.000                     NaN                       NaN   \n","10  2013-11-19 12:25:00.000                     NaN                       NaN   \n","11  2017-07-25 16:54:00.000                     NaN                       NaN   \n","14  2014-03-25 16:26:00.000                     NaN                       NaN   \n","15  2014-05-28 08:41:00.000                     NaN                       NaN   \n","16  2023-11-16 11:44:00.000                     NaN                       NaN   \n","17  2016-02-06 05:40:00.000                     NaN                       NaN   \n","20  2014-03-02 18:15:00.000                     NaN                       NaN   \n","23  2014-08-13 16:39:00.000                     NaN                       NaN   \n","27  2013-08-16 14:30:00.000                     NaN                       NaN   \n","33  2014-04-21 11:00:00.000                     NaN                       NaN   \n","35  2015-04-28 15:00:00.000                     NaN                       NaN   \n","38  2015-04-24 10:02:00.000                     NaN                       NaN   \n","39  2014-10-16 14:56:00.000                     NaN                       NaN   \n","41  2013-07-08 14:09:00.000                     NaN                       NaN   \n","44  2021-03-11 16:20:00.000                     NaN                       NaN   \n","45  2013-09-18 18:00:00.000                     NaN                       NaN   \n","57  2023-12-20 15:35:00.000                     NaN                       NaN   \n","65  2021-12-24 16:48:00.000                    14.0                       1.0   \n","68  2014-08-06 21:00:00.000                     NaN                       NaN   \n","70  2014-04-27 09:30:00.000                     NaN                       NaN   \n","71  2014-10-03 10:15:00.000                     NaN                       NaN   \n","\n","         Verkeerd bed  ... Totale ligduur (d)  Opname specialisme  \\\n","0   geen verkeerd bed  ...                  4                 ORT   \n","3   geen verkeerd bed  ...                  6                 ORT   \n","6   geen verkeerd bed  ...                  4                 ORT   \n","9   geen verkeerd bed  ...                 13                 CHI   \n","10  geen verkeerd bed  ...                  4                 ORT   \n","11  geen verkeerd bed  ...                 14                 CHI   \n","14  geen verkeerd bed  ...                  2                 CHI   \n","15  geen verkeerd bed  ...                  2                 ORT   \n","16  geen verkeerd bed  ...                  5                 CHI   \n","17  geen verkeerd bed  ...                  3                 CHI   \n","20  geen verkeerd bed  ...                  3                 CHI   \n","23  geen verkeerd bed  ...                  4                 ORT   \n","27  geen verkeerd bed  ...                  4                 ORT   \n","33  geen verkeerd bed  ...                 21                 CHI   \n","35  geen verkeerd bed  ...                  3                 CHI   \n","38  geen verkeerd bed  ...                  3                 CHI   \n","39  geen verkeerd bed  ...                  4                 ORT   \n","41  geen verkeerd bed  ...                 32                 CHI   \n","44  geen verkeerd bed  ...                  2                 ORT   \n","45  geen verkeerd bed  ...                  9                 CHI   \n","57  geen verkeerd bed  ...                  1                 CHI   \n","65       verkeerd bed  ...                 16                 CHI   \n","68  geen verkeerd bed  ...                  7                 CHI   \n","70  geen verkeerd bed  ...                  5                 CHI   \n","71  geen verkeerd bed  ...                  2                 CHI   \n","\n","              Ontslagbestemming DBC code Postcode cijfers  \\\n","0            Eigen woonomgeving     1701             5932   \n","3            Eigen woonomgeving      NaN             5824   \n","6            Eigen woonomgeving     1701             5963   \n","9            Eigen woonomgeving      732             5913   \n","10          Instelling (anders)      NaN             5915   \n","11  Overleden (zonder obductie)      406             5961   \n","14           Eigen woonomgeving      129             5912   \n","15           Eigen woonomgeving     1910             5922   \n","16           Eigen woonomgeving      327             5932   \n","17  Overleden (zonder obductie)      323             5944   \n","20           Eigen woonomgeving      323             5962   \n","23           Eigen woonomgeving     3019             5911   \n","27           Eigen woonomgeving      NaN             5871   \n","33           Eigen woonomgeving      335             5951   \n","35           Eigen woonomgeving     3020             5911   \n","38           Eigen woonomgeving      405             5866   \n","39           Eigen woonomgeving     1704             5801   \n","41           Eigen woonomgeving      NaN             5944   \n","44           Eigen woonomgeving     1701             5912   \n","45           Eigen woonomgeving      NaN             5863   \n","57           Eigen woonomgeving      NaN             5914   \n","65           Eigen woonomgeving      M99             5995   \n","68           Eigen woonomgeving      113             5912   \n","70           Eigen woonomgeving      129             5913   \n","71           Eigen woonomgeving      418             5975   \n","\n","                          Diagnose    SES  \\\n","0    Arthrosis: Bekken/heup/b.been -0.166   \n","3                              NaN  0.405   \n","6    Arthrosis: Bekken/heup/b.been  0.236   \n","9              choledocholithiasis  0.149   \n","10                             NaN -0.236   \n","11    aneurysma aorta abd, ruptuur  0.098   \n","14       Overige (buik)kl algemeen -0.114   \n","15            Compartimentsyndroom -0.303   \n","16          Diverticulosis / -itis -0.166   \n","17  Cholecystitis / cholelithiasis  0.156   \n","20  Cholecystitis / cholelithiasis  0.276   \n","23       Femur proximaal (+collum) -0.074   \n","27                             NaN  0.155   \n","33        Maligne neoplasma rectum -0.002   \n","35                    Femur overig -0.074   \n","38        Aneurysma aorta iliacaal  0.272   \n","39      Avasculaire necrose: gr 17 -0.084   \n","41                             NaN  0.156   \n","44   Arthrosis: Bekken/heup/b.been -0.114   \n","45                             NaN  0.128   \n","57                             NaN -0.274   \n","65             maligniteit overige  0.103   \n","68                    appendicitis -0.114   \n","70       Overige (buik)kl algemeen  0.149   \n","71  P.A.O.D. 2, claudicatio interm  0.182   \n","\n","                                            PATIENTNR       VISITNR ICD_CODE  \n","0                                                 NaN           NaN      NaN  \n","3                                                 NaN           NaN      NaN  \n","6                                                 NaN           NaN      NaN  \n","9                                                 NaN           NaN      NaN  \n","10                                                NaN           NaN      NaN  \n","11  0x30D8D00172C0D1298513D4FA133D04843AF27B4F5573...  2.000872e+09      NaN  \n","14                                                NaN           NaN      NaN  \n","15                                                NaN           NaN      NaN  \n","16  0x2A60523E311F8E082A6D23BBC059F13889167C303931...  2.001225e+09      NaN  \n","17  0xB65561A2F3A24E36572CE39F89D52ABFE74239A95C89...  2.000725e+09      NaN  \n","20                                                NaN           NaN      NaN  \n","23                                                NaN           NaN      NaN  \n","27                                                NaN           NaN      NaN  \n","33                                                NaN           NaN      NaN  \n","35  0xB51AE69B822E01648FC8D09C0EBF8F682FB95E4CF86B...  2.000660e+09      NaN  \n","38  0x77AA53FF418AA2FA871FF25B4E85DB0E205C185C7D65...  2.000650e+09      NaN  \n","39                                                NaN           NaN      NaN  \n","41                                                NaN           NaN      NaN  \n","44                                                NaN           NaN      NaN  \n","45                                                NaN           NaN      NaN  \n","57  0xC9454D09B0342A5FE9B6799C1D6CDA271CD35DB497E5...  2.001230e+09      NaN  \n","65                                                NaN           NaN      NaN  \n","68                                                NaN           NaN      NaN  \n","70                                                NaN           NaN      NaN  \n","71                                                NaN           NaN      NaN  \n","\n","[25 rows x 22 columns]"],"text/html":["\n","  <div id=\"df-30717f38-dcd0-4e31-9171-4b642e3e6806\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Patiëntnummer</th>\n","      <th>Opnamenummer</th>\n","      <th>Geslacht</th>\n","      <th>Opnameleeftijd</th>\n","      <th>Overleden tijdens opname</th>\n","      <th>Opname DatumTijd</th>\n","      <th>Ontslag DatumTijd</th>\n","      <th>Klinische beddagen (d)</th>\n","      <th>Verkeerd bed ligduur (d)</th>\n","      <th>Verkeerd bed</th>\n","      <th>...</th>\n","      <th>Totale ligduur (d)</th>\n","      <th>Opname specialisme</th>\n","      <th>Ontslagbestemming</th>\n","      <th>DBC code</th>\n","      <th>Postcode cijfers</th>\n","      <th>Diagnose</th>\n","      <th>SES</th>\n","      <th>PATIENTNR</th>\n","      <th>VISITNR</th>\n","      <th>ICD_CODE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0xBB6519A3F69B6A39A6B0809755FA0932F922508BF9D3...</td>\n","      <td>2000559578</td>\n","      <td>1</td>\n","      <td>78</td>\n","      <td>Nee</td>\n","      <td>2014-04-23 06:23:00.000</td>\n","      <td>2014-04-26 10:25:00.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>geen verkeerd bed</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>ORT</td>\n","      <td>Eigen woonomgeving</td>\n","      <td>1701</td>\n","      <td>5932</td>\n","      <td>Arthrosis: Bekken/heup/b.been</td>\n","      <td>-0.166</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0xD337F10FBF25D09972F8202C00A0C8DDC8461755063E...</td>\n","      <td>2000512460</td>\n","      <td>0</td>\n","      <td>81</td>\n","      <td>Nee</td>\n","      <td>2013-09-02 06:30:00.000</td>\n","      <td>2013-09-07 11:00:00.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>geen verkeerd bed</td>\n","      <td>...</td>\n","      <td>6</td>\n","      <td>ORT</td>\n","      <td>Eigen woonomgeving</td>\n","      <td>NaN</td>\n","      <td>5824</td>\n","      <td>NaN</td>\n","      <td>0.405</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0xB44659AE4EE3AD4DCEC2FE4025F5CCE634ECA496BC21...</td>\n","      <td>2000633450</td>\n","      <td>1</td>\n","      <td>76</td>\n","      <td>Nee</td>\n","      <td>2015-03-17 10:15:00.000</td>\n","      <td>2015-03-20 15:30:00.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>geen verkeerd bed</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>ORT</td>\n","      <td>Eigen woonomgeving</td>\n","      <td>1701</td>\n","      <td>5963</td>\n","      <td>Arthrosis: Bekken/heup/b.been</td>\n","      <td>0.236</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0xD33BCB7669B72D481D6307E35F9F24AAE896FBC18729...</td>\n","      <td>2000568836</td>\n","      <td>0</td>\n","      <td>93</td>\n","      <td>Nee</td>\n","      <td>2014-04-22 17:15:00.000</td>\n","      <td>2014-05-04 11:15:00.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>geen verkeerd bed</td>\n","      <td>...</td>\n","      <td>13</td>\n","      <td>CHI</td>\n","      <td>Eigen woonomgeving</td>\n","      <td>732</td>\n","      <td>5913</td>\n","      <td>choledocholithiasis</td>\n","      <td>0.149</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>0x4BE4F3268549A32E055B0478D623363ED3A0C1F9FA79...</td>\n","      <td>2000536630</td>\n","      <td>1</td>\n","      <td>60</td>\n","      <td>Nee</td>\n","      <td>2013-11-16 01:38:00.000</td>\n","      <td>2013-11-19 12:25:00.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>geen verkeerd bed</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>ORT</td>\n","      <td>Instelling (anders)</td>\n","      <td>NaN</td>\n","      <td>5915</td>\n","      <td>NaN</td>\n","      <td>-0.236</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>0x30D8D00172C0D1298513D4FA133D04843AF27B4F5573...</td>\n","      <td>2000872170</td>\n","      <td>1</td>\n","      <td>81</td>\n","      <td>Ja</td>\n","      <td>2017-07-12 16:51:00.000</td>\n","      <td>2017-07-25 16:54:00.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>geen verkeerd bed</td>\n","      <td>...</td>\n","      <td>14</td>\n","      <td>CHI</td>\n","      <td>Overleden (zonder obductie)</td>\n","      <td>406</td>\n","      <td>5961</td>\n","      <td>aneurysma aorta abd, ruptuur</td>\n","      <td>0.098</td>\n","      <td>0x30D8D00172C0D1298513D4FA133D04843AF27B4F5573...</td>\n","      <td>2.000872e+09</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>0xEB63FD197DFD28B1BA620E43605A310F353C7A1A0D69...</td>\n","      <td>2000562321</td>\n","      <td>1</td>\n","      <td>56</td>\n","      <td>Nee</td>\n","      <td>2014-03-24 04:32:00.000</td>\n","      <td>2014-03-25 16:26:00.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>geen verkeerd bed</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>CHI</td>\n","      <td>Eigen woonomgeving</td>\n","      <td>129</td>\n","      <td>5912</td>\n","      <td>Overige (buik)kl algemeen</td>\n","      <td>-0.114</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0x28608725B0FA3806BDF40F7061DF718270A31DC09BDF...</td>\n","      <td>2000574929</td>\n","      <td>1</td>\n","      <td>19</td>\n","      <td>Nee</td>\n","      <td>2014-05-27 10:00:00.000</td>\n","      <td>2014-05-28 08:41:00.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>geen verkeerd bed</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>ORT</td>\n","      <td>Eigen woonomgeving</td>\n","      <td>1910</td>\n","      <td>5922</td>\n","      <td>Compartimentsyndroom</td>\n","      <td>-0.303</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0x2A60523E311F8E082A6D23BBC059F13889167C303931...</td>\n","      <td>2001224950</td>\n","      <td>0</td>\n","      <td>73</td>\n","      <td>Nee</td>\n","      <td>2023-11-12 22:47:00.000</td>\n","      <td>2023-11-16 11:44:00.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>geen verkeerd bed</td>\n","      <td>...</td>\n","      <td>5</td>\n","      <td>CHI</td>\n","      <td>Eigen woonomgeving</td>\n","      <td>327</td>\n","      <td>5932</td>\n","      <td>Diverticulosis / -itis</td>\n","      <td>-0.166</td>\n","      <td>0x2A60523E311F8E082A6D23BBC059F13889167C303931...</td>\n","      <td>2.001225e+09</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>0xB65561A2F3A24E36572CE39F89D52ABFE74239A95C89...</td>\n","      <td>2000725341</td>\n","      <td>1</td>\n","      <td>75</td>\n","      <td>Ja</td>\n","      <td>2016-02-04 10:30:00.000</td>\n","      <td>2016-02-06 05:40:00.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>geen verkeerd bed</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>CHI</td>\n","      <td>Overleden (zonder obductie)</td>\n","      <td>323</td>\n","      <td>5944</td>\n","      <td>Cholecystitis / cholelithiasis</td>\n","      <td>0.156</td>\n","      <td>0xB65561A2F3A24E36572CE39F89D52ABFE74239A95C89...</td>\n","      <td>2.000725e+09</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>0x0ADB9C524D98D5A7AF2C26866509B1BDE1FCB650A63D...</td>\n","      <td>2000557964</td>\n","      <td>1</td>\n","      <td>69</td>\n","      <td>Nee</td>\n","      <td>2014-02-28 08:57:00.000</td>\n","      <td>2014-03-02 18:15:00.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>geen verkeerd bed</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>CHI</td>\n","      <td>Eigen woonomgeving</td>\n","      <td>323</td>\n","      <td>5962</td>\n","      <td>Cholecystitis / cholelithiasis</td>\n","      <td>0.276</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>0xB5C34DF98D0885A3CA776D773BDCA821E560493949F2...</td>\n","      <td>2000589091</td>\n","      <td>1</td>\n","      <td>63</td>\n","      <td>Nee</td>\n","      <td>2014-08-10 05:27:00.000</td>\n","      <td>2014-08-13 16:39:00.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>geen verkeerd bed</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>ORT</td>\n","      <td>Eigen woonomgeving</td>\n","      <td>3019</td>\n","      <td>5911</td>\n","      <td>Femur proximaal (+collum)</td>\n","      <td>-0.074</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>0x677F539EC1DAC59C6EC17B59FD608641FF7F68B94663...</td>\n","      <td>2000505536</td>\n","      <td>0</td>\n","      <td>57</td>\n","      <td>Nee</td>\n","      <td>2013-08-13 06:30:00.000</td>\n","      <td>2013-08-16 14:30:00.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>geen verkeerd bed</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>ORT</td>\n","      <td>Eigen woonomgeving</td>\n","      <td>NaN</td>\n","      <td>5871</td>\n","      <td>NaN</td>\n","      <td>0.155</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>0xADB28FA0D0E721EBAD0B5587C725958181F3C411B55E...</td>\n","      <td>2000557478</td>\n","      <td>1</td>\n","      <td>62</td>\n","      <td>Nee</td>\n","      <td>2014-04-01 06:30:00.000</td>\n","      <td>2014-04-21 11:00:00.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>geen verkeerd bed</td>\n","      <td>...</td>\n","      <td>21</td>\n","      <td>CHI</td>\n","      <td>Eigen woonomgeving</td>\n","      <td>335</td>\n","      <td>5951</td>\n","      <td>Maligne neoplasma rectum</td>\n","      <td>-0.002</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>0xB51AE69B822E01648FC8D09C0EBF8F682FB95E4CF86B...</td>\n","      <td>2000660253</td>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>Nee</td>\n","      <td>2015-04-26 17:11:00.000</td>\n","      <td>2015-04-28 15:00:00.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>geen verkeerd bed</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>CHI</td>\n","      <td>Eigen woonomgeving</td>\n","      <td>3020</td>\n","      <td>5911</td>\n","      <td>Femur overig</td>\n","      <td>-0.074</td>\n","      <td>0xB51AE69B822E01648FC8D09C0EBF8F682FB95E4CF86B...</td>\n","      <td>2.000660e+09</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>0x77AA53FF418AA2FA871FF25B4E85DB0E205C185C7D65...</td>\n","      <td>2000650449</td>\n","      <td>1</td>\n","      <td>79</td>\n","      <td>Nee</td>\n","      <td>2015-04-22 06:30:00.000</td>\n","      <td>2015-04-24 10:02:00.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>geen verkeerd bed</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>CHI</td>\n","      <td>Eigen woonomgeving</td>\n","      <td>405</td>\n","      <td>5866</td>\n","      <td>Aneurysma aorta iliacaal</td>\n","      <td>0.272</td>\n","      <td>0x77AA53FF418AA2FA871FF25B4E85DB0E205C185C7D65...</td>\n","      <td>2.000650e+09</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>0xCB7759AAC3F0EF8809043323BCEE65FE07512DB2F3E7...</td>\n","      <td>2000592426</td>\n","      <td>0</td>\n","      <td>84</td>\n","      <td>Nee</td>\n","      <td>2014-10-13 10:30:00.000</td>\n","      <td>2014-10-16 14:56:00.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>geen verkeerd bed</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>ORT</td>\n","      <td>Eigen woonomgeving</td>\n","      <td>1704</td>\n","      <td>5801</td>\n","      <td>Avasculaire necrose: gr 17</td>\n","      <td>-0.084</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>0x802BAE7492310DD7733EA4D388AF0FCFD2D5D50038CF...</td>\n","      <td>2000498788</td>\n","      <td>0</td>\n","      <td>76</td>\n","      <td>Nee</td>\n","      <td>2013-06-07 06:30:00.000</td>\n","      <td>2013-07-08 14:09:00.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>geen verkeerd bed</td>\n","      <td>...</td>\n","      <td>32</td>\n","      <td>CHI</td>\n","      <td>Eigen woonomgeving</td>\n","      <td>NaN</td>\n","      <td>5944</td>\n","      <td>NaN</td>\n","      <td>0.156</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>0x5740BAC080BE4CF407531B554F9657034C10702B4BE6...</td>\n","      <td>2001070356</td>\n","      <td>0</td>\n","      <td>76</td>\n","      <td>Nee</td>\n","      <td>2021-03-10 06:30:00.000</td>\n","      <td>2021-03-11 16:20:00.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>geen verkeerd bed</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>ORT</td>\n","      <td>Eigen woonomgeving</td>\n","      <td>1701</td>\n","      <td>5912</td>\n","      <td>Arthrosis: Bekken/heup/b.been</td>\n","      <td>-0.114</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>0xF49EFC1D27028254B660CAB6BFEAC2FC3DA1A8649731...</td>\n","      <td>2000522950</td>\n","      <td>0</td>\n","      <td>84</td>\n","      <td>Nee</td>\n","      <td>2013-09-10 10:44:00.000</td>\n","      <td>2013-09-18 18:00:00.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>geen verkeerd bed</td>\n","      <td>...</td>\n","      <td>9</td>\n","      <td>CHI</td>\n","      <td>Eigen woonomgeving</td>\n","      <td>NaN</td>\n","      <td>5863</td>\n","      <td>NaN</td>\n","      <td>0.128</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>57</th>\n","      <td>0xC9454D09B0342A5FE9B6799C1D6CDA271CD35DB497E5...</td>\n","      <td>2001230297</td>\n","      <td>0</td>\n","      <td>82</td>\n","      <td>Nee</td>\n","      <td>2023-12-20 14:04:00.000</td>\n","      <td>2023-12-20 15:35:00.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>geen verkeerd bed</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>CHI</td>\n","      <td>Eigen woonomgeving</td>\n","      <td>NaN</td>\n","      <td>5914</td>\n","      <td>NaN</td>\n","      <td>-0.274</td>\n","      <td>0xC9454D09B0342A5FE9B6799C1D6CDA271CD35DB497E5...</td>\n","      <td>2.001230e+09</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>65</th>\n","      <td>0xBD955F9AFD54159E9362965177B4153ABE54CEDDD1D6...</td>\n","      <td>2001118973</td>\n","      <td>0</td>\n","      <td>71</td>\n","      <td>Nee</td>\n","      <td>2021-12-09 16:14:00.000</td>\n","      <td>2021-12-24 16:48:00.000</td>\n","      <td>14.0</td>\n","      <td>1.0</td>\n","      <td>verkeerd bed</td>\n","      <td>...</td>\n","      <td>16</td>\n","      <td>CHI</td>\n","      <td>Eigen woonomgeving</td>\n","      <td>M99</td>\n","      <td>5995</td>\n","      <td>maligniteit overige</td>\n","      <td>0.103</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>68</th>\n","      <td>0xBF81FB95477866C36B972305A2D6257D55056BBA5234...</td>\n","      <td>2000587723</td>\n","      <td>1</td>\n","      <td>15</td>\n","      <td>Nee</td>\n","      <td>2014-07-31 15:31:00.000</td>\n","      <td>2014-08-06 21:00:00.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>geen verkeerd bed</td>\n","      <td>...</td>\n","      <td>7</td>\n","      <td>CHI</td>\n","      <td>Eigen woonomgeving</td>\n","      <td>113</td>\n","      <td>5912</td>\n","      <td>appendicitis</td>\n","      <td>-0.114</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>70</th>\n","      <td>0x1683D159612B27795C318D549A6E27E2F234EF9E0B2C...</td>\n","      <td>2000568996</td>\n","      <td>1</td>\n","      <td>56</td>\n","      <td>Nee</td>\n","      <td>2014-04-23 12:28:00.000</td>\n","      <td>2014-04-27 09:30:00.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>geen verkeerd bed</td>\n","      <td>...</td>\n","      <td>5</td>\n","      <td>CHI</td>\n","      <td>Eigen woonomgeving</td>\n","      <td>129</td>\n","      <td>5913</td>\n","      <td>Overige (buik)kl algemeen</td>\n","      <td>0.149</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>71</th>\n","      <td>0xC64AAC1384717DF262C751AB32FCCA5B1A5BC345B04E...</td>\n","      <td>2000596272</td>\n","      <td>1</td>\n","      <td>73</td>\n","      <td>Nee</td>\n","      <td>2014-10-02 07:00:00.000</td>\n","      <td>2014-10-03 10:15:00.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>geen verkeerd bed</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>CHI</td>\n","      <td>Eigen woonomgeving</td>\n","      <td>418</td>\n","      <td>5975</td>\n","      <td>P.A.O.D. 2, claudicatio interm</td>\n","      <td>0.182</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>25 rows × 22 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-30717f38-dcd0-4e31-9171-4b642e3e6806')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-30717f38-dcd0-4e31-9171-4b642e3e6806 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-30717f38-dcd0-4e31-9171-4b642e3e6806');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bfc24740-58f7-4487-b742-84208c6c0089\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bfc24740-58f7-4487-b742-84208c6c0089')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bfc24740-58f7-4487-b742-84208c6c0089 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":46}]},{"cell_type":"markdown","source":["# 5. Merging ASA, Dysp, BMI"],"metadata":{"id":"2Tg6mSypEJT5"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"2Jyyu4XpqOgK"},"outputs":[],"source":["# The df_asa['asa'] scores still need to be matched to the corresponding 'Opnamenummer' of a patient, which is closest in time\n","# Merge all scores left on the patient dataset\n","df_merged = pd.merge(df_patient_icd, df_asa,    how='left', left_on=['Patiëntnummer'], right_on=['PatientID'])\n","df_merged = pd.merge(df_merged, df_result_dysp, how='left', left_on=['Patiëntnummer'], right_on=['PatientID'])\n","df_merged = pd.merge(df_merged, df_bmi,         how='left', left_on=['Patiëntnummer'], right_on=['PatientID'], suffixes=('_df1', '_df2'))\n","\n","# Rename the columns\n","df_merged.rename(columns={'ASA': 'ASA_score', 'Dyspnoe': 'Dyspnoe_score', 'BMI': 'BMI_score'}, inplace=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VefLLrIuSKoB"},"outputs":[],"source":["# convert to date_time\n","df_merged[\"Opname DatumTijd\"] = pd.to_datetime(df_merged[\"Opname DatumTijd\"], format=\"%Y-%m-%d %H:%M:%S.%f\", errors='coerce')\n","df_merged[\"Ontslag DatumTijd\"] = pd.to_datetime(df_merged[\"Ontslag DatumTijd\"], format=\"%Y-%m-%d %H:%M:%S.%f\", errors='coerce')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BkWY-XKESIkQ"},"outputs":[],"source":["months_considered = 6\n","\n","condition_asa = (\n","  (df_merged[\"Opname DatumTijd\"] - pd.DateOffset(months=months_considered) <= df_merged[\"Date Question_x\"]) &\n","  (df_merged[\"Date Question_x\"] <= df_merged[\"Ontslag DatumTijd\"])\n",")\n","condition_dysp = (\n","    (df_merged[\"Opname DatumTijd\"] - pd.DateOffset(months=months_considered) <= df_merged[\"Date Question_y\"]) &\n","    (df_merged[\"Date Question_y\"] <= df_merged[\"Ontslag DatumTijd\"])\n",")\n","condition_bmi = (\n","    (df_merged[\"Opname DatumTijd\"] - pd.DateOffset(months=months_considered) <= df_merged[\"Date Question\"]) &\n","    (df_merged[\"Date Question\"] <= df_merged[\"Ontslag DatumTijd\"])\n",")\n","\n","df_merged[\"final ASA\"]  = np.where(condition_asa, df_merged[\"ASA_score\"], None)\n","df_merged[\"final Dysp\"] = np.where(condition_dysp, df_merged[\"Dyspnoe_score\"], None)\n","df_merged[\"final BMI\"]  = np.where(condition_bmi, df_merged[\"BMI_score\"], None)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SPAVTBG8aIp9","executionInfo":{"status":"ok","timestamp":1736429031859,"user_tz":-60,"elapsed":2719,"user":{"displayName":"Nathan de Pater","userId":"00637828017025432291"}},"outputId":"3fd82ef6-a7ba-4203-c972-c0e9edddc5f3"},"outputs":[{"output_type":"stream","name":"stdout","text":["204614\n","414437\n","385703\n","the maximum number of combinations wil be 52744\n","of those, the number with at least one observation is 30442\n"]}],"source":["print(df_merged['final Dysp'].value_counts().sum())\n","print(df_merged['final ASA'].value_counts().sum())\n","print(df_merged['final BMI'].value_counts().sum())\n","\n","# Now we sort the values by date, so if we drop duplicates, we keep the most recent observation of e.g. BMI if there are multiple.\n","df_merged.sort_values(by=['Date Question_x', 'Date Question_y', 'Date Question'], inplace=True)\n","\n","# # There are still a a lot of duplicate lines.\n","print(f\"the maximum number of combinations wil be {len(df_merged.drop_duplicates(subset=['Patiëntnummer', 'Opnamenummer']))}\")\n","print(f\"of those, the number with at least one observation is {len(df_merged.dropna(subset=['final Dysp', 'final ASA', 'final BMI']))}\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FmMijPEZbQ31","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1736429032870,"user_tz":-60,"elapsed":1016,"user":{"displayName":"Nathan de Pater","userId":"00637828017025432291"}},"outputId":"499a21fc-9d19-4312-b154-9b96d016a4ce"},"outputs":[{"output_type":"stream","name":"stdout","text":["2163390\n","52744\n","final Dysp    38945\n","final ASA     29720\n","final BMI     29247\n","dtype: int64\n","Index(['Patiëntnummer', 'Opnamenummer', 'Geslacht', 'Opnameleeftijd',\n","       'Overleden tijdens opname', 'Opname DatumTijd', 'Ontslag DatumTijd',\n","       'Klinische beddagen (d)', 'Verkeerd bed ligduur (d)', 'Verkeerd bed',\n","       'Herkomst', 'Spoed', 'Totale ligduur (d)', 'Opname specialisme',\n","       'Ontslagbestemming', 'DBC code', 'Postcode cijfers', 'Diagnose', 'SES',\n","       'PATIENTNR', 'VISITNR', 'ICD_CODE', 'PatientID_x', 'ScreenData_x',\n","       'ASA_score', 'Physician department Name_x', 'Date Question_x',\n","       'PatientID_y', 'ScreenData_y', 'Dyspnoe_score', 'Date Question_y',\n","       'Physician department Name_y', 'PatientID', 'ScreenData', 'BMI_score',\n","       'Physician department Name', 'Date Question', 'final ASA', 'final Dysp',\n","       'final BMI'],\n","      dtype='object')\n"]}],"source":["print(len(df_merged))\n","df_merged.drop_duplicates(subset=['Patiëntnummer', 'Opnamenummer'], inplace=True)\n","print(len(df_merged))\n","\n","# check the amount of nan values for each column in the final dataset.\n","print(df_merged[['final Dysp', 'final ASA', 'final BMI']].isna().sum())\n","# one option is to only keep full entries, the other one is to perform imputation. Both will be done.\n","print(df_merged.columns)\n","# drop BMI, ASA_score and Dyspnoe_score\n","df_merged.drop(columns=['BMI_score', 'ASA_score', 'Dyspnoe_score'], inplace=True)\n","# Rename final variables to score variables\n","df_merged.rename(columns={'final Dysp': 'Dyspnoe_score', 'final ASA': 'ASA_score', 'final BMI': 'BMI_score'}, inplace=True)"]},{"cell_type":"code","source":["df_merged['ASA_score'].value_counts()\n","#for ort\n","df_merged[df_merged['Opname specialisme']=='ORT']['ASA_score'].value_counts().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jMmCZ19JOsV5","executionInfo":{"status":"ok","timestamp":1736429106628,"user_tz":-60,"elapsed":191,"user":{"displayName":"Nathan de Pater","userId":"00637828017025432291"}},"outputId":"7ceea62b-f9a5-4ff6-bd94-773c5dd17282"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["8231"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["df_merged = df_merged[['Patiëntnummer', 'Opnameleeftijd', 'Opnamenummer', 'Opname DatumTijd', 'Ontslag DatumTijd', 'Geslacht', 'Herkomst', 'Spoed', 'Overleden tijdens opname', 'ASA_score', 'Dyspnoe_score', 'BMI_score', 'Opname specialisme', 'SES', 'ICD_CODE', 'DBC code','Ontslagbestemming']]\n"],"metadata":{"id":"YVrNYzuKYiYS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_merged.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VPLXdOgVYxcf","executionInfo":{"status":"ok","timestamp":1734538148970,"user_tz":-60,"elapsed":10,"user":{"displayName":"Nathan de Pater","userId":"00637828017025432291"}},"outputId":"6c53a693-5c68-48e2-9922-8c79b9e26f97"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Patiëntnummer', 'Opnameleeftijd', 'Opnamenummer', 'Opname DatumTijd',\n","       'Ontslag DatumTijd', 'Geslacht', 'Herkomst', 'Spoed',\n","       'Overleden tijdens opname', 'ASA_score', 'Dyspnoe_score', 'BMI_score',\n","       'Opname specialisme', 'SES', 'ICD_CODE', 'DBC code',\n","       'Ontslagbestemming'],\n","      dtype='object')"]},"metadata":{},"execution_count":104}]},{"cell_type":"markdown","source":["# 6. Select relevant columns and export"],"metadata":{"id":"4NTbrYM8Ih5y"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"pBKwZSOks2fy","executionInfo":{"status":"ok","timestamp":1734538149642,"user_tz":-60,"elapsed":678,"user":{"displayName":"Nathan de Pater","userId":"00637828017025432291"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"8516a8fc-4171-4a04-cf93-1f0456a285f1"},"outputs":[{"output_type":"stream","name":"stdout","text":["52744\n"]}],"source":["# Keep only the relevant columns\n","df_reduced = df_merged[['Patiëntnummer', 'Opnameleeftijd', 'Opnamenummer', 'Opname DatumTijd', 'Geslacht', 'Herkomst', 'Spoed', 'Overleden tijdens opname', 'ASA_score', 'Dyspnoe_score', 'BMI_score', 'Opname specialisme', 'SES', 'ICD_CODE', 'DBC code','Ontslagbestemming']]\n","print(len(df_reduced))\n","# Duplicates uitzoeken\n","if create_new_datasets:\n","  df_reduced.to_csv(base_dir + 'data/preprocessed/patient.csv', index= False)"]}],"metadata":{"colab":{"provenance":[],"collapsed_sections":["Ab_xmNsE982e","doVZDlhF-jRm","Pd6o_rWC_4wX","dDWRZO_mCEjA","e6pDhRRPDvPY","2Tg6mSypEJT5","4NTbrYM8Ih5y"],"authorship_tag":"ABX9TyPPo6WlC1XasSlxFqt4acA6"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}